@model User
@{
	string component = ViewData["view"].ToString();
}

	<style>
	::-webkit-file-upload-button {
		display: none;
	}
body{
	background: #f7f7ff;
	
}

	.fixed-column {
		position: fixed;
		height: 100%;
		overflow-y: auto;
	}

	.scrolling-column {
		margin-left: 33.33333%; /* Adjust this based on the width of your fixed column */
		height: 100%;
		overflow-y: auto;
	}
.card {
	margin-top:10px;
	display: flex;
	flex-direction: column;
	min-width: 0;
	word-wrap: break-word;
	background-color: #fff;
	background-clip: border-box;
	border: 0 solid transparent;
	border-radius: .25rem;
	margin-bottom: 1.5rem;
	box-shadow: 0 2px 6px 0 rgb(218 218 253 / 65%), 0 2px 6px 0 rgb(206 206 238 / 54%);
}
.me-2 {
	margin-right: .5rem!important;
}

</style>
<div >
	@if (ViewData.ContainsKey("error"))
	{
		<p class="alert alert-warning" role="alert">@ViewData["error"]</p>
	}

	@if (ViewData.ContainsKey("success"))
	{
		<p class="alert alert-success" role="alert">@ViewData["success"]</p>
	}
	<div class="container-fluid">
		<div class="row ">


			<div class="col-lg-4 " >
				<div class="card">
					<div class="card-body">
						<div class="d-flex flex-column align-items-center text-center">
							<form asp-action="UpdateImage" method="post" enctype="multipart/form-data">
								@if (User.FindFirst("id").Value == Model.Id.ToString())
								{
									<input name="img" type="file" style="position:absolute; width:110px; height:110px; background-color:transparent; color:transparent; cursor:pointer" />
								}
								
							<img src="~/images/@Model.Avatar" class="rounded-circle p-1 bg-primary" width="110px" height="110px">
							<div class="mt-3">

									@if (User.FindFirst("id").Value == Model.Id.ToString())

								{
										<input type="hidden" name="id" value="@User.FindFirst("id").Value" />
										<input name="name" value="@Model.UserName" style="text-align:center; font-size:20px; font-weight:bold" />
										<input name="description" value="@Model.Description" style="text-align:center" />

										<br />
									<button type="submit" class="btn btn-primary">update</button>
								}
								else
								{
									<h4>@Model.UserName</h4>
										<p class="text-muted font-size-sm">@Model.Description</p>
									<button class="btn btn-primary">Add friend</button>
									<button class="btn btn-outline-primary">Message</button>
								}
								
							</div>
							</form>
						</div>

						<hr class="my-4">
						<ul class="list-group list-group-flush">
							<li class="list-group-item ">
								<a href="/profile/@Model.UserName" class="d-flex justify-content-between align-items-center flex-wrap">
									<i class="fas fa-user " style="font-size: 30px;"></i>
									<h5>Profile</h5>
							</a>
							</li>
							<li class="list-group-item ">
								<a href="/profile/@Model.UserName/friend" class="d-flex justify-content-between align-items-center flex-wrap">
									<i class="fas fa-user-friends" style="font-size: 30px;" ></i> 
								<h5>Friends</h5>
							</a>
							</li>
							<li class="list-group-item ">
								<a href="" class="d-flex justify-content-between align-items-center flex-wrap">
									<i class="fas fa-money-check-alt" style="font-size: 30px;"></i>
								<h5>History Purcharse</h5>
							</a>
							</li>

						</ul>
					</div>
				</div>
			</div>


			<div class="col-lg-8 ">
				
						@await Component.InvokeAsync(component,new{name=Model.UserName})
			</div>


		</div>
	</div>
</div>


